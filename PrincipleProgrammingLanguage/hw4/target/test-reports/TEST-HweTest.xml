<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="chanhyeok" name="HweTest" tests="55" errors="0" failures="0" skipped="0" time="0.123" timestamp="2022-11-28T11:19:25">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://ubuntu.com/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/><property name="sun.java.command" value="/home/chanhyeok/2022_2/PrincipleProgrammingLanguage/hw4/sbt/bin/sbt-launch.jar"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2022-07-19"/><property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.16+8-post-Ubuntu-0ubuntu120.04"/><property name="user.name" value="chanhyeok"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/chanhyeok/.cache/JNA/temp/jna11798969927935183497.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.16"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.vendor" value="Ubuntu"/><property name="scala.ext.dirs" value="/home/chanhyeok/.sbt/0.13/java9-rt-ext-ubuntu_11_0_16"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/home/chanhyeok/2022_2/PrincipleProgrammingLanguage/hw4/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Ubuntu"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Asia/Seoul"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/chanhyeok"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="/home/chanhyeok/.sbt/1.0"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.15.74.2-microsoft-standard-WSL2"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/lib/wsl/lib"/><property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/><property name="user.dir" value="/home/chanhyeok/2022_2/PrincipleProgrammingLanguage/hw4"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="11.0.16+8-post-Ubuntu-0ubuntu120.04"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="HweTest" name="GcTest env: HashMap(), mem: Mem(HashMap(LocVal(3) -&gt; IntVal(13), LocVal(5) -&gt; IntVal(9), LocVal(1) -&gt; IntVal(10), LocVal(4) -&gt; IntVal(21), LocVal(2) -&gt; IntVal(13)),6)" time="0.046">
                                                 
                                               </testcase><testcase classname="HweTest" name="GcTest env: HashMap(Var(&quot;temp&quot;) -&gt; LocVal(2), Var(&quot;x&quot;) -&gt; LocVal(1), Var(&quot;y&quot;) -&gt; LocVal(5), Var(&quot;ret&quot;) -&gt; LocVal(4), Var(&quot;p&quot;) -&gt; LocVal(3)), mem: Mem(HashMap(LocVal(3) -&gt; IntVal(13), LocVal(5) -&gt; IntVal(9), LocVal(1) -&gt; IntVal(10), LocVal(4) -&gt; IntVal(21), LocVal(0) -&gt; ProcVal(List(Var(&quot;x&quot;)),Ite(LTEExpr(Var(&quot;x&quot;),Const(0)),Const(0),Ite(LTEExpr(Var(&quot;x&quot;),Const(2)),Const(1),Let(Var(&quot;temp&quot;),Const(1),Let(Var(&quot;p&quot;),Const(1),Let(Var(&quot;ret&quot;),Const(1),Let(Var(&quot;y&quot;),Const(3),Block(BeginEnd(WhileExpr(LTEExpr(Var(&quot;y&quot;),Var(&quot;x&quot;)),BeginEnd(Block(Block(Block(Asn(Var(&quot;temp&quot;),Var(&quot;ret&quot;)),Asn(Var(&quot;ret&quot;),Add(Var(&quot;p&quot;),Var(&quot;ret&quot;)))),Asn(Var(&quot;p&quot;),Var(&quot;temp&quot;))),Asn(Var(&quot;y&quot;),Add(Var(&quot;y&quot;),Const(1))))))),Var(&quot;ret&quot;)))))))),HashMap()), LocVal(2) -&gt; IntVal(13)),6)" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="GcTest env: HashMap(Var(&quot;temp&quot;) -&gt; LocVal(2)), mem: Mem(HashMap(LocVal(3) -&gt; IntVal(13), LocVal(5) -&gt; IntVal(9), LocVal(1) -&gt; IntVal(10), LocVal(4) -&gt; IntVal(21), LocVal(2) -&gt; IntVal(13)),6)" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="GcTest env: HashMap(Var(&quot;temp&quot;) -&gt; LocVal(2)), mem: Mem(HashMap(LocVal(3) -&gt; IntVal(13), LocVal(5) -&gt; IntVal(9), LocVal(1) -&gt; IntVal(10), LocVal(4) -&gt; IntVal(21), LocVal(2) -&gt; LocVal(3)),6)" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="GcTest env: HashMap(Var(&quot;temp&quot;) -&gt; LocVal(2)), mem: Mem(HashMap(LocVal(3) -&gt; RecordVal(Var(&quot;x&quot;),LocVal(5),EmptyRecordVal), LocVal(5) -&gt; IntVal(9), LocVal(1) -&gt; IntVal(10), LocVal(4) -&gt; IntVal(21), LocVal(2) -&gt; LocVal(3)),6)" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: SkipVal input: skip" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(true) input: true" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(false) input: false" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: let x = 1 in x" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: 1" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(2) input: 1 + 1" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(0) input: 1 - 1" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: 1 * 1" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: 1 / 1" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(false) input: 1 == 0" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(true) input: 1 == 1" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(false) input: 1 &lt;= 0" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(true) input: 1 &lt;= 10" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(false) input: not true" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(true) input: not false" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(false) input: not 1 == 1" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: BoolVal(true) input: not 1 == 2" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: if true then 1 else 2" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(2) input: if false then 1 else 2" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(11) input: let x = 0 in begin while x &lt;= 10 x := x + 1 end ; x" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(0) input: let x = 0 in begin while false x := x + 1 end ; x" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(2) input: let x = 1 in x+1" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: ProcVal(List(Var(&quot;x&quot;)),Add(Var(&quot;x&quot;),Const(10)),HashMap()) input: proc (x) x + 10" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: ProcVal(List(Var(&quot;x&quot;), Var(&quot;y&quot;)),Add(Add(Var(&quot;x&quot;),Var(&quot;y&quot;)),Const(10)),HashMap()) input: proc (x,y) x + y + 10" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: ProcVal(List(Var(&quot;x&quot;), Var(&quot;z&quot;)),Add(Add(Var(&quot;x&quot;),Var(&quot;x&quot;)),Const(10)),HashMap()) input: proc (x,z) x + x + 10" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(13) input: let f = proc (x,y)  x + y + 10 in f (1,2)" time="0.003">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(11) input: let f = proc (x)  x  + 10 in f (1)" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(20) input: let f = proc (x)  x  + 10 in let y = 10 in f &lt;y&gt;" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(5) input: let f = proc (x)  x := 5 in let y = 10 in begin f &lt;y&gt;; y end" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(15) input: let f = proc (x,y)  x - y + 10 in let y = 10 in let z = 5 in f &lt;y,z&gt;" time="0.003">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(10) input: let f = proc (x)  x := 5 in let y = 10 in begin f (y); y end" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(11) input: let x = 10 in x := 11" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: SkipVal input: let x = 10 in x := skip" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: EmptyRecordVal input: {}" time="0.004">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: RecordVal(Var(&quot;x&quot;),LocVal(0),EmptyRecordVal) input: {x := 1}" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: RecordVal(Var(&quot;y&quot;),LocVal(0),RecordVal(Var(&quot;x&quot;),LocVal(1),EmptyRecordVal)) input: {y := 1, x := 1}" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(3) input: let z = 1 in begin {y := z := 0, x := z := 3}; z end" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: let r = {x:=1,y:=2} in r.x" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(3) input: let r = {x:=1,y:={z:=3}} in r.y.z" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: let r = {x:=1,y:={z:=3}} in r.y := 1" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: let r = {x:=1,y:={z:=3}} in begin r.y := 1; r.y end" time="0.002">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: begin {x:=1,y:={z:=3}} end . y := 1" time="0.0">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(2) input: let z = 1 in begin {x:=1,y:={k:=z := 2}} end . y := z" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: if 0 &lt;= 1 then 1 else 2" time="0.001">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(0) input: let fibo = 
proc (x)
    if x &lt;= 0 then 0 else
      if x &lt;= 2 then 1 else
        let temp = 1 in
        let p = 1 in
        let ret = 1 in
        let y = 3 in
        begin while y &lt;= x
          begin
            temp := ret;
            ret := p + ret;
            p := temp;
            y := y + 1
          end end;
        ret
         in fibo (0)" time="0.003">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: let fibo = 
proc (x)
    if x &lt;= 0 then 0 else
      if x &lt;= 2 then 1 else
        let temp = 1 in
        let p = 1 in
        let ret = 1 in
        let y = 3 in
        begin while y &lt;= x
          begin
            temp := ret;
            ret := p + ret;
            p := temp;
            y := y + 1
          end end;
        ret
         in fibo (1)" time="0.003">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(1) input: let fibo = 
proc (x)
    if x &lt;= 0 then 0 else
      if x &lt;= 2 then 1 else
        let temp = 1 in
        let p = 1 in
        let ret = 1 in
        let y = 3 in
        begin while y &lt;= x
          begin
            temp := ret;
            ret := p + ret;
            p := temp;
            y := y + 1
          end end;
        ret
         in fibo (2)" time="0.003">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(2) input: let fibo = 
proc (x)
    if x &lt;= 0 then 0 else
      if x &lt;= 2 then 1 else
        let temp = 1 in
        let p = 1 in
        let ret = 1 in
        let y = 3 in
        begin while y &lt;= x
          begin
            temp := ret;
            ret := p + ret;
            p := temp;
            y := y + 1
          end end;
        ret
         in fibo (3)" time="0.003">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(3) input: let fibo = 
proc (x)
    if x &lt;= 0 then 0 else
      if x &lt;= 2 then 1 else
        let temp = 1 in
        let p = 1 in
        let ret = 1 in
        let y = 3 in
        begin while y &lt;= x
          begin
            temp := ret;
            ret := p + ret;
            p := temp;
            y := y + 1
          end end;
        ret
         in fibo (4)" time="0.004">
                                                 
                                               </testcase><testcase classname="HweTest" name="test with expected result: IntVal(55) input: let fibo = 
proc (x)
    if x &lt;= 0 then 0 else
      if x &lt;= 2 then 1 else
        let temp = 1 in
        let p = 1 in
        let ret = 1 in
        let y = 3 in
        begin while y &lt;= x
          begin
            temp := ret;
            ret := p + ret;
            p := temp;
            y := y + 1
          end end;
        ret
         in fibo (10)" time="0.003">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>